## [Start] Create Request template. **
#set( $args = $util.defaultIfNull($ctx.stash.transformedArgs, $ctx.args) )
## Set the default values to put request **
#set( $mergedValues = $util.defaultIfNull($ctx.stash.defaultValues, {}) )
## copy the values from input **
$util.qr($mergedValues.putAll($util.defaultIfNull($args.input, {})))
## set the typename **
$util.qr($mergedValues.put("__typename", "Bulletin"))

## Set timestamp values **
#set( $createdAt = $util.time.nowISO8601() )
$util.qr($mergedValues.put("createdAt", $createdAt))
$util.qr($mergedValues.put("updatedAt", $createdAt))
$util.qr($mergedValues.put("datePosted", $createdAt))

#set( $PutObject = {
  "version": "2018-05-29",
  "operation": "PutItem",
  "attributeValues": $util.dynamodb.toMapValues($mergedValues),
  "condition": $condition
} )

## Begin - key condition **
$util.qr($ctx.stash.conditions.add({
  "id": {
    "attributeExists": false
  }
}))
## End - key condition **

## Start condition block **
#if( $ctx.stash.conditions && $ctx.stash.conditions.size() != 0 )
  #set( $mergedConditions = {
    "and": $ctx.stash.conditions
  } )
  #set( $Conditions = $util.parseJson($util.transform.toDynamoDBConditionExpression($mergedConditions)) )
  $util.qr($PutObject.put("condition", $Conditions))
#end

#set( $Key = {
  "id": $util.dynamodb.toDynamoDB($mergedValues.id)
} )
$util.qr($PutObject.put("key", $Key))

$util.toJson($PutObject)
## [End] Create Request template. **
